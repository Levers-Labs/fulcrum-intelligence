"""initial

Revision ID: 4f657f569842
Revises:
Create Date: 2024-04-16 19:24:15.103991

"""

from collections.abc import Sequence

import sqlalchemy as sa
import sqlmodel
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "4f657f569842"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "story",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("current_timestamp(0)"), nullable=False),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.text("current_timestamp(0)"), nullable=False),
        sa.Column(
            "genre",
            sa.Enum(
                "GROWTH",
                "TRENDS",
                "SWINGS",
                "PERFORMANCE",
                "MIX_SHIFT",
                "SEGMENT_IMPORTANCE",
                "INFLUENCE",
                "ROOT_CAUSE",
                name="storygenre",
                schema="story_store",
                inherit_schema=True,
            ),
            nullable=True,
        ),
        sa.Column(
            "story_type",
            sa.Enum(
                "SLOWING_GROWTH",
                "ACCELERATING_GROWTH",
                "NEW_UPWARD_TREND",
                "NEW_DOWNWARD_TREND",
                "STICKY_DOWNWARD_TREND",
                "NEW_NORMAL",
                "RECORD_HIGH",
                "RECORD_LOW",
                "METRIC_SPIKE",
                "METRIC_DROP",
                "SEGMENT_SPIKE",
                "SEGMENT_DROP",
                "LIKELY_RED",
                "LIKELY_YELLOW",
                "LIKELY_GREEN",
                "REQUIRED_PERFORMANCE",
                "GROWING_SEGMENT",
                "SHRINKING_SEGMENT",
                "IMPROVING_SEGMENT",
                "WORSENING_SEGMENT",
                "TOP3_SEGMENT",
                "BOTTOM3_SEGMENT",
                "STRONGER_INFLUENCE",
                "WEAKER_INFLUENCE",
                "SEASONAL_DRIFT",
                "SEGMENT_DRIFT",
                "INFLUENCE_DRIFT",
                "COMPONENT_DRIFT",
                name="storytype",
                schema="story_store",
                inherit_schema=True,
            ),
            nullable=True,
        ),
        sa.Column("metric_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column("template", sa.Text(), nullable=False),
        sa.Column("text", sa.Text(), nullable=False),
        sa.Column("variables", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("series", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        schema="story_store",
    )
    op.create_index(op.f("ix_story_store_story_genre"), "story", ["genre"], unique=False, schema="story_store")
    op.create_index(op.f("ix_story_store_story_metric_id"), "story", ["metric_id"], unique=False, schema="story_store")
    op.create_index(
        op.f("ix_story_store_story_story_type"), "story", ["story_type"], unique=False, schema="story_store"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_story_store_story_story_type"), table_name="story", schema="story_store")
    op.drop_index(op.f("ix_story_store_story_metric_id"), table_name="story", schema="story_store")
    op.drop_index(op.f("ix_story_store_story_genre"), table_name="story", schema="story_store")
    op.drop_table("story", schema="story_store")
    # ### end Alembic commands ###
