"""Initial

Revision ID: 1ceea6ddceab
Revises:
Create Date: 2024-05-24 12:19:45.824745

"""

from collections.abc import Sequence

import sqlalchemy as sa
import sqlmodel
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "1ceea6ddceab"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "story",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("current_timestamp(0)"), nullable=False),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.text("current_timestamp(0)"), nullable=False),
        sa.Column(
            "genre",
            sa.Enum("GROWTH", "TRENDS", name="storygenre", schema="story_store", inherit_schema=True),
            nullable=True,
        ),
        sa.Column(
            "story_group",
            sa.Enum(
                "GROWTH_RATES",
                "TREND_CHANGES",
                "TREND_EXCEPTIONS",
                "LONG_RANGE",
                name="storygroup",
                schema="story_store",
                inherit_schema=True,
            ),
            nullable=True,
        ),
        sa.Column(
            "story_type",
            sa.Enum(
                "SLOWING_GROWTH",
                "ACCELERATING_GROWTH",
                "STABLE_TREND",
                "NEW_UPWARD_TREND",
                "NEW_DOWNWARD_TREND",
                "PERFORMANCE_PLATEAU",
                "SPIKE",
                "DROP",
                "IMPROVING_PERFORMANCE",
                "WORSENING_PERFORMANCE",
                name="storytype",
                schema="story_store",
                inherit_schema=True,
            ),
            nullable=True,
        ),
        sa.Column(
            "grain",
            sa.Enum("DAY", "WEEK", "MONTH", "QUARTER", "YEAR", name="grain", schema="story_store", inherit_schema=True),
            nullable=True,
        ),
        sa.Column("metric_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("title", sa.Text(), nullable=False),
        sa.Column("title_template", sa.Text(), nullable=False),
        sa.Column("detail", sa.Text(), nullable=False),
        sa.Column("detail_template", sa.Text(), nullable=False),
        sa.Column("variables", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("series", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        schema="story_store",
    )
    op.create_index(op.f("ix_story_store_story_genre"), "story", ["genre"], unique=False, schema="story_store")
    op.create_index(op.f("ix_story_store_story_grain"), "story", ["grain"], unique=False, schema="story_store")
    op.create_index(op.f("ix_story_store_story_metric_id"), "story", ["metric_id"], unique=False, schema="story_store")
    op.create_index(
        op.f("ix_story_store_story_story_group"), "story", ["story_group"], unique=False, schema="story_store"
    )
    op.create_index(
        op.f("ix_story_store_story_story_type"), "story", ["story_type"], unique=False, schema="story_store"
    )
    op.drop_index("ix_user_email", table_name="user")
    op.drop_table("user")
    op.drop_table("alembic_version")
    op.drop_index("ix_describe_dimension", table_name="describe")
    op.drop_index("ix_describe_metric_id", table_name="describe")
    op.drop_table("describe")
    op.drop_index("ix_correlate_metric_id_1", table_name="correlate")
    op.drop_index("ix_correlate_metric_id_2", table_name="correlate")
    op.drop_table("correlate")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "correlate",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP(0)"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP(0)"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("metric_id_1", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("metric_id_2", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("start_date", sa.DATE(), autoincrement=False, nullable=False),
        sa.Column("end_date", sa.DATE(), autoincrement=False, nullable=False),
        sa.Column("correlation_coefficient", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="pk_correlate"),
    )
    op.create_index("ix_correlate_metric_id_2", "correlate", ["metric_id_2"], unique=False)
    op.create_index("ix_correlate_metric_id_1", "correlate", ["metric_id_1"], unique=False)
    op.create_table(
        "describe",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP(0)"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP(0)"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("metric_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("start_date", sa.DATE(), autoincrement=False, nullable=False),
        sa.Column("end_date", sa.DATE(), autoincrement=False, nullable=False),
        sa.Column("dimension", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("mean", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
        sa.Column("median", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
        sa.Column("variance", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
        sa.Column("standard_deviation", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
        sa.Column("percentile_25", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
        sa.Column("percentile_50", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
        sa.Column("percentile_75", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
        sa.Column("percentile_90", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
        sa.Column("percentile_95", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
        sa.Column("percentile_99", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
        sa.Column("min", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
        sa.Column("max", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
        sa.Column("count", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("sum", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
        sa.Column("unique", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="pk_describe"),
    )
    op.create_index("ix_describe_metric_id", "describe", ["metric_id"], unique=False)
    op.create_index("ix_describe_dimension", "describe", ["dimension"], unique=False)
    op.create_table(
        "alembic_version",
        sa.Column("version_num", sa.VARCHAR(length=32), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("version_num", name="alembic_version_pkc"),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP(0)"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP(0)"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("first_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("last_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("is_active", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("password", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="pk_user"),
    )
    op.create_index("ix_user_email", "user", ["email"], unique=True)
    op.drop_index(op.f("ix_story_store_story_story_type"), table_name="story", schema="story_store")
    op.drop_index(op.f("ix_story_store_story_story_group"), table_name="story", schema="story_store")
    op.drop_index(op.f("ix_story_store_story_metric_id"), table_name="story", schema="story_store")
    op.drop_index(op.f("ix_story_store_story_grain"), table_name="story", schema="story_store")
    op.drop_index(op.f("ix_story_store_story_genre"), table_name="story", schema="story_store")
    op.drop_table("story", schema="story_store")
    # ### end Alembic commands ###
