"""initial_patterns

Revision ID: 3b0d322a598f
Revises:
Create Date: 2025-03-23 16:53:12.268534

"""

from collections.abc import Sequence

import sqlalchemy as sa
import sqlmodel
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "3b0d322a598f"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "performance_status",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("current_timestamp(0)"), nullable=False),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.text("current_timestamp(0)"), nullable=False),
        sa.Column("tenant_id", sa.Integer(), nullable=False),
        sa.Column("metric_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("pattern", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("version", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("analysis_window", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("analysis_date", sa.Date(), nullable=False),
        sa.Column("evaluation_time", sa.DateTime(), nullable=False),
        sa.Column("error", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("current_value", sa.Float(), nullable=False),
        sa.Column("prior_value", sa.Float(), nullable=True),
        sa.Column("target_value", sa.Float(), nullable=True),
        sa.Column(
            "status",
            sa.Enum(
                "ON_TRACK",
                "OFF_TRACK",
                "NO_TARGET",
                name="metric_gva_status",
                schema="analysis_store",
                inherit_schema=True,
            ),
            nullable=True,
        ),
        sa.Column("absolute_delta_from_prior", sa.Float(), nullable=True),
        sa.Column("pop_change_percent", sa.Float(), nullable=True),
        sa.Column("absolute_gap", sa.Float(), nullable=True),
        sa.Column("percent_gap", sa.Float(), nullable=True),
        sa.Column("absolute_over_performance", sa.Float(), nullable=True),
        sa.Column("percent_over_performance", sa.Float(), nullable=True),
        sa.Column("status_change", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("streak", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("hold_steady", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("metric_id", "tenant_id", "pattern", "analysis_date"),
        schema="analysis_store",
    )
    op.create_index(
        "idx_pattern_result_metric_tenant",
        "performance_status",
        ["metric_id", "tenant_id"],
        unique=False,
        schema="analysis_store",
    )
    op.create_index(
        "idx_pattern_result_metric_tenant_pattern",
        "performance_status",
        ["metric_id", "tenant_id", "pattern"],
        unique=False,
        schema="analysis_store",
    )
    op.create_index(
        "idx_pattern_result_metric_tenant_pattern_date",
        "performance_status",
        ["metric_id", "tenant_id", "pattern", "analysis_date"],
        unique=False,
        schema="analysis_store",
        postgresql_ops={"analysis_date": "DESC"},
    )
    op.create_index(
        op.f("ix_analysis_store_performance_status_status"),
        "performance_status",
        ["status"],
        unique=False,
        schema="analysis_store",
    )
    op.create_index(
        op.f("ix_analysis_store_performance_status_tenant_id"),
        "performance_status",
        ["tenant_id"],
        unique=False,
        schema="analysis_store",
    )
    op.execute("ALTER TABLE analysis_store.performance_status ENABLE ROW LEVEL SECURITY;")
    op.execute(
        "CREATE POLICY tenant_isolation_analysis_store_performance_status ON analysis_store.performance_status "
        "USING (tenant_id = (SELECT current_setting('app.current_tenant')::int));"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_analysis_store_performance_status_tenant_id"), table_name="performance_status", schema="analysis_store"
    )
    op.drop_index(
        op.f("ix_analysis_store_performance_status_status"), table_name="performance_status", schema="analysis_store"
    )
    op.drop_index(
        "idx_pattern_result_metric_tenant_pattern_date",
        table_name="performance_status",
        schema="analysis_store",
        postgresql_ops={"analysis_date": "DESC"},
    )
    op.drop_index("idx_pattern_result_metric_tenant_pattern", table_name="performance_status", schema="analysis_store")
    op.drop_index("idx_pattern_result_metric_tenant", table_name="performance_status", schema="analysis_store")
    op.drop_table("performance_status", schema="analysis_store")
    # ### end Alembic commands ###
