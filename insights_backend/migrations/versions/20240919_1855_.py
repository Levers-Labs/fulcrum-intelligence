"""empty message

Revision ID: 0ec67649a45f
Revises:
Create Date: 2024-09-19 18:55:58.952506

"""

from collections.abc import Sequence

import sqlalchemy as sa
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "0ec67649a45f"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "tenant",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=True),
        sa.Column("description", sa.String(length=255), nullable=True),
        sa.Column("domains", sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        schema="insights_store",
    )
    op.create_index(op.f("ix_insights_store_tenant_name"), "tenant", ["name"], unique=True, schema="insights_store")
    op.create_table(
        "tenantconfig",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("tenant_id", sa.Integer(), nullable=False),
        sa.Column("config1", sa.Text(), nullable=True),
        sa.Column("config2", sa.Text(), nullable=True),
        sa.Column("config3", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["tenant_id"],
            ["insights_store.tenant.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="insights_store",
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("tenant_id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "provider",
            sa.Enum("GOOGLE", "EMAIL", "OTHER", name="provider", schema="insights_store", inherit_schema=True),
            nullable=True,
        ),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("external_user_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("profile_picture", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(
            ["tenant_id"],
            ["insights_store.tenant.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        schema="insights_store",
    )
    op.execute("ALTER TABLE insights_store.user ENABLE ROW LEVEL SECURITY;")
    op.execute(
        r"CREATE POLICY tenant_isolation_insights_store_user ON insights_store.user USING \ "
        "(tenant_id = current_setting('app.current_tenant')::int);"
    )
    op.execute("ALTER TABLE insights_store.tenantconfig ENABLE ROW LEVEL SECURITY;")
    op.execute(
        r"CREATE POLICY tenant_isolation_insights_store_tenantconfig ON insights_store.tenantconfig USING \ "
        "(tenant_id = current_setting('app.current_tenant')::int);"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user", schema="insights_store")
    op.drop_table("tenantconfig", schema="insights_store")
    op.drop_index(op.f("ix_insights_store_tenant_name"), table_name="tenant", schema="insights_store")
    op.drop_table("tenant", schema="insights_store")
    # ### end Alembic commands ###
