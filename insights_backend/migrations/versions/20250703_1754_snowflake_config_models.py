"""snowflake_config_models

Revision ID: 22e542509577
Revises: 7ebca88763ec
Create Date: 2025-07-03 17:54:00.188268

"""

from collections.abc import Sequence

import sqlalchemy as sa
import sqlalchemy_utils
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "22e542509577"
down_revision: str | None = "7ebca88763ec"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "snowflakeconfig",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("current_timestamp(0)"), nullable=False),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.text("current_timestamp(0)"), nullable=False),
        sa.Column("tenant_id", sa.Integer(), nullable=True),
        sa.Column("account_identifier", sa.String(length=255), nullable=True),
        sa.Column("username", sa.String(length=255), nullable=True),
        sa.Column("warehouse", sa.String(length=255), nullable=True),
        sa.Column("role", sa.String(length=255), nullable=True),
        sa.Column("database", sa.String(length=255), nullable=True),
        sa.Column("db_schema", sa.String(length=255), nullable=True),
        sa.Column(
            "auth_method",
            postgresql.ENUM("PASSWORD", "PRIVATE_KEY", name="snowflake_auth_method", schema="insights_store"),
            nullable=False,
        ),
        sa.Column("password", sqlalchemy_utils.types.encrypted.encrypted_type.EncryptedType(), nullable=True),  # type: ignore
        sa.Column("private_key", sqlalchemy_utils.types.encrypted.encrypted_type.EncryptedType(), nullable=True),  # type: ignore
        sa.Column(
            "private_key_passphrase", sqlalchemy_utils.types.encrypted.encrypted_type.EncryptedType(), nullable=True  # type: ignore
        ),
        sa.ForeignKeyConstraint(["tenant_id"], ["insights_store.tenant.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("tenant_id"),
        schema="insights_store",
    )
    op.add_column(
        "tenantconfig",
        sa.Column("enable_metric_cache", sa.Boolean(), nullable=False, server_default="false"),
        schema="insights_store",
    )
    op.execute("ALTER TABLE insights_store.snowflakeconfig ENABLE ROW LEVEL SECURITY;")
    op.execute(
        "CREATE POLICY tenant_isolation_insights_store_snowflakeconfig ON insights_store.snowflakeconfig "
        "USING (tenant_id = (SELECT current_setting('app.current_tenant')::int));"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("tenantconfig", "enable_metric_cache", schema="insights_store")
    op.drop_table("snowflakeconfig", schema="insights_store")
    # Drop enum type
    snowflake_auth_method_enum = postgresql.ENUM(
        "PASSWORD", "PRIVATE_KEY", name="snowflake_auth_method", schema="insights_store"
    )
    snowflake_auth_method_enum.drop(op.get_bind())
    # ### end Alembic commands ###
