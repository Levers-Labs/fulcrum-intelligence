"""add metric target unique constraint

Revision ID: b6f0484c64d0
Revises: 4d4be94c501c
Create Date: 2025-04-23 18:26:59.881824

"""

from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "b6f0484c64d0"
down_revision: str | None = "4d4be94c501c"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "metric_dimensional_time_series",
        sa.Column("grain", sa.Enum("DAY", "WEEK", "MONTH", "QUARTER", "YEAR", name="granularity"), nullable=False),
        schema="query_store",
    )
    op.alter_column(
        "metric_dimensional_time_series",
        "dimension_slice",
        existing_type=sa.VARCHAR(),
        nullable=True,
        schema="query_store",
    )
    op.drop_index("idx_metric_dimensional_ts_date", table_name="metric_dimensional_time_series", schema="query_store")
    op.create_index(
        "idx_metric_dimensional_ts_date",
        "metric_dimensional_time_series",
        ["date"],
        unique=False,
        schema="query_store",
        postgresql_ops={"date": "DESC"},
    )
    op.create_index(
        "idx_metric_dimensional_ts_grain",
        "metric_dimensional_time_series",
        ["grain"],
        unique=False,
        schema="query_store",
    )
    op.create_index(
        "idx_metric_dimensional_ts_metric_tenant_grain_date",
        "metric_dimensional_time_series",
        ["metric_id", "tenant_id", "grain", "date"],
        unique=False,
        schema="query_store",
        postgresql_ops={"date": "DESC"},
    )
    op.add_column(
        "metric_sync_status",
        sa.Column("grain", sa.Enum("DAY", "WEEK", "MONTH", "QUARTER", "YEAR", name="granularity"), nullable=False),
        schema="query_store",
    )
    op.drop_index("idx_metric_sync_status_last_sync", table_name="metric_sync_status", schema="query_store")
    op.create_index(
        "idx_metric_sync_status_last_sync",
        "metric_sync_status",
        ["last_sync_at"],
        unique=False,
        schema="query_store",
        postgresql_ops={"last_sync_at": "DESC"},
    )
    op.create_index(
        "idx_metric_sync_status_grain_dimension",
        "metric_sync_status",
        ["grain", "dimension_name"],
        unique=False,
        schema="query_store",
    )
    op.create_unique_constraint(
        "uq_metric_sync_status",
        "metric_sync_status",
        ["metric_id", "tenant_id", "grain", "dimension_name", "sync_type"],
        schema="query_store",
    )
    op.drop_index("idx_metric_target_date", table_name="metric_target", schema="query_store")
    op.create_index(
        "idx_metric_target_date",
        "metric_target",
        ["target_date"],
        unique=False,
        schema="query_store",
        postgresql_ops={"target_date": "DESC"},
    )
    op.create_index("idx_metric_target_grain", "metric_target", ["grain"], unique=False, schema="query_store")
    op.create_index(
        "idx_target_metric_tenant_grain_date",
        "metric_target",
        ["metric_id", "tenant_id", "grain", "target_date"],
        unique=False,
        schema="query_store",
        postgresql_ops={"target_date": "DESC"},
    )
    op.create_unique_constraint(
        "uq_metric_target", "metric_target", ["metric_id", "grain", "target_date", "tenant_id"], schema="query_store"
    )
    op.add_column(
        "metric_time_series",
        sa.Column("grain", sa.Enum("DAY", "WEEK", "MONTH", "QUARTER", "YEAR", name="granularity"), nullable=False),
        schema="query_store",
    )
    op.drop_index("idx_metric_time_series_date", table_name="metric_time_series", schema="query_store")
    op.create_index(
        "idx_metric_time_series_date",
        "metric_time_series",
        ["date"],
        unique=False,
        schema="query_store",
        postgresql_ops={"date": "DESC"},
    )
    op.create_index("idx_metric_time_series_grain", "metric_time_series", ["grain"], unique=False, schema="query_store")
    op.create_index(
        "idx_metric_time_series_metric_tenant_grain_date",
        "metric_time_series",
        ["metric_id", "tenant_id", "grain", "date"],
        unique=False,
        schema="query_store",
        postgresql_ops={"date": "DESC"},
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        "idx_metric_time_series_metric_tenant_grain_date",
        table_name="metric_time_series",
        schema="query_store",
        postgresql_ops={"date": "DESC"},
    )
    op.drop_index("idx_metric_time_series_grain", table_name="metric_time_series", schema="query_store")
    op.drop_index(
        "idx_metric_time_series_date",
        table_name="metric_time_series",
        schema="query_store",
        postgresql_ops={"date": "DESC"},
    )
    op.create_index(
        "idx_metric_time_series_date",
        "metric_time_series",
        [sa.literal_column("date DESC")],
        unique=False,
        schema="query_store",
    )
    op.drop_column("metric_time_series", "grain", schema="query_store")
    op.drop_constraint("uq_metric_target", "metric_target", schema="query_store", type_="unique")
    op.drop_index(
        "idx_target_metric_tenant_grain_date",
        table_name="metric_target",
        schema="query_store",
        postgresql_ops={"target_date": "DESC"},
    )
    op.drop_index("idx_metric_target_grain", table_name="metric_target", schema="query_store")
    op.drop_index(
        "idx_metric_target_date",
        table_name="metric_target",
        schema="query_store",
        postgresql_ops={"target_date": "DESC"},
    )
    op.create_index(
        "idx_metric_target_date",
        "metric_target",
        [sa.literal_column("target_date DESC")],
        unique=False,
        schema="query_store",
    )
    op.drop_constraint("uq_metric_sync_status", "metric_sync_status", schema="query_store", type_="unique")
    op.drop_index("idx_metric_sync_status_grain_dimension", table_name="metric_sync_status", schema="query_store")
    op.drop_index(
        "idx_metric_sync_status_last_sync",
        table_name="metric_sync_status",
        schema="query_store",
        postgresql_ops={"last_sync_at": "DESC"},
    )
    op.create_index(
        "idx_metric_sync_status_last_sync",
        "metric_sync_status",
        [sa.literal_column("last_sync_at DESC")],
        unique=False,
        schema="query_store",
    )
    op.drop_column("metric_sync_status", "grain", schema="query_store")
    op.drop_index(
        "idx_metric_dimensional_ts_metric_tenant_grain_date",
        table_name="metric_dimensional_time_series",
        schema="query_store",
        postgresql_ops={"date": "DESC"},
    )
    op.drop_index("idx_metric_dimensional_ts_grain", table_name="metric_dimensional_time_series", schema="query_store")
    op.drop_index(
        "idx_metric_dimensional_ts_date",
        table_name="metric_dimensional_time_series",
        schema="query_store",
        postgresql_ops={"date": "DESC"},
    )
    op.create_index(
        "idx_metric_dimensional_ts_date",
        "metric_dimensional_time_series",
        [sa.literal_column("date DESC")],
        unique=False,
        schema="query_store",
    )
    op.alter_column(
        "metric_dimensional_time_series",
        "dimension_slice",
        existing_type=sa.VARCHAR(),
        nullable=False,
        schema="query_store",
    )
    op.drop_column("metric_dimensional_time_series", "grain", schema="query_store")
    # ### end Alembic commands ###
