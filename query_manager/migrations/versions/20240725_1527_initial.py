"""Initial

Revision ID: ab5d5f4754b7
Revises: 
Create Date: 2024-07-25 15:27:49.368450

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ab5d5f4754b7'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dimensions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('current_timestamp(0)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('current_timestamp(0)'), nullable=False),
    sa.Column('dimension_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('label', sa.Text(), nullable=False),
    sa.Column('reference', sa.Text(), nullable=True),
    sa.Column('definition', sa.Text(), nullable=True),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.PrimaryKeyConstraint('id', 'dimension_id'),
    schema='query_store'
    )
    op.create_index(op.f('ix_query_store_dimensions_dimension_id'), 'dimensions', ['dimension_id'], unique=True, schema='query_store')
    op.create_table('metric',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('current_timestamp(0)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('current_timestamp(0)'), nullable=False),
    sa.Column('metric_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('label', sa.Text(), nullable=False),
    sa.Column('abbreviation', sa.Text(), nullable=True),
    sa.Column('definition', sa.Text(), nullable=True),
    sa.Column('unit_of_measure', sa.Text(), nullable=True),
    sa.Column('unit', sa.Text(), nullable=True),
    sa.Column('terms', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('complexity', sa.Enum('ATOMIC', 'COMPLEX', name='complexity', schema='query_store', inherit_schema=True), nullable=True),
    sa.Column('metric_expression', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('periods', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('grain_aggregation', sa.Enum('DAY', 'WEEK', 'MONTH', 'QUARTER', 'YEAR', name='grain_aggregation', schema='query_store', inherit_schema=True), nullable=True),
    sa.Column('aggregations', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('owned_by_team', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.PrimaryKeyConstraint('id', 'metric_id'),
    schema='query_store'
    )
    op.create_index(op.f('ix_query_store_metric_metric_id'), 'metric', ['metric_id'], unique=True, schema='query_store')
    op.create_table('metricdimensions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('current_timestamp(0)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('current_timestamp(0)'), nullable=False),
    sa.Column('metric_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('dimension_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['dimension_id'], ['query_store.dimensions.dimension_id'], ),
    sa.ForeignKeyConstraint(['metric_id'], ['query_store.metric.metric_id'], ),
    sa.PrimaryKeyConstraint('id', 'metric_id', 'dimension_id'),
    schema='query_store'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('metricdimensions', schema='query_store')
    op.drop_index(op.f('ix_query_store_metric_metric_id'), table_name='metric', schema='query_store')
    op.drop_table('metric', schema='query_store')
    op.drop_index(op.f('ix_query_store_dimensions_dimension_id'), table_name='dimensions', schema='query_store')
    op.drop_table('dimensions', schema='query_store')
    # ### end Alembic commands ###
