"""initial

Revision ID: 7e7a22650c1c
Revises:
Create Date: 2024-10-07 13:35:29.842534

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "7e7a22650c1c"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "dimension",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("current_timestamp(0)"), nullable=False),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.text("current_timestamp(0)"), nullable=False),
        sa.Column("tenant_id", sa.Integer(), nullable=False),
        sa.Column("dimension_id", sa.String(length=255), nullable=True),
        sa.Column("label", sa.String(length=255), nullable=True),
        sa.Column("reference", sa.String(length=255), nullable=True),
        sa.Column("definition", sa.Text(), nullable=True),
        sa.Column("meta_data", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("dimension_id", "tenant_id", name="uq_dimension_id_tenant_id"),
        schema="query_store",
    )
    op.create_index(
        op.f("ix_query_store_dimension_dimension_id"), "dimension", ["dimension_id"], unique=False, schema="query_store"
    )
    op.create_index(
        op.f("ix_query_store_dimension_tenant_id"), "dimension", ["tenant_id"], unique=False, schema="query_store"
    )
    op.create_table(
        "metric",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("current_timestamp(0)"), nullable=False),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.text("current_timestamp(0)"), nullable=False),
        sa.Column("tenant_id", sa.Integer(), nullable=False),
        sa.Column("metric_id", sa.String(length=255), nullable=True),
        sa.Column("label", sa.String(length=255), nullable=True),
        sa.Column("abbreviation", sa.String(length=255), nullable=True),
        sa.Column("definition", sa.Text(), nullable=True),
        sa.Column("unit_of_measure", sa.String(length=255), nullable=True),
        sa.Column("unit", sa.String(length=255), nullable=True),
        sa.Column("terms", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column(
            "complexity",
            sa.Enum("ATOMIC", "COMPLEX", name="metric_complexity", schema="query_store", inherit_schema=True),
            nullable=True,
        ),
        sa.Column("metric_expression", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("periods", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("grain_aggregation", sa.String(length=255), nullable=True),
        sa.Column("aggregations", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("owned_by_team", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("meta_data", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("hypothetical_max", sa.Float(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("metric_id", "tenant_id", name="uq_metric_id_tenant_id"),
        schema="query_store",
    )
    op.create_index(
        op.f("ix_query_store_metric_metric_id"), "metric", ["metric_id"], unique=False, schema="query_store"
    )
    op.create_index(
        op.f("ix_query_store_metric_tenant_id"), "metric", ["tenant_id"], unique=False, schema="query_store"
    )
    op.create_table(
        "metriccomponent",
        sa.Column("parent_id", sa.Integer(), nullable=False),
        sa.Column("component_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["component_id"],
            ["query_store.metric.id"],
        ),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["query_store.metric.id"],
        ),
        sa.PrimaryKeyConstraint("parent_id", "component_id"),
        schema="query_store",
    )
    op.create_table(
        "metricdimension",
        sa.Column("metric_id", sa.Integer(), nullable=False),
        sa.Column("dimension_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["dimension_id"],
            ["query_store.dimension.id"],
        ),
        sa.ForeignKeyConstraint(
            ["metric_id"],
            ["query_store.metric.id"],
        ),
        sa.PrimaryKeyConstraint("metric_id", "dimension_id"),
        schema="query_store",
    )
    op.create_table(
        "metricinfluence",
        sa.Column("influencer_id", sa.Integer(), nullable=False),
        sa.Column("influenced_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["influenced_id"],
            ["query_store.metric.id"],
        ),
        sa.ForeignKeyConstraint(
            ["influencer_id"],
            ["query_store.metric.id"],
        ),
        sa.PrimaryKeyConstraint("influencer_id", "influenced_id"),
        schema="query_store",
    )
    op.create_table(
        "metricinput",
        sa.Column("metric_id", sa.Integer(), nullable=False),
        sa.Column("input_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["input_id"],
            ["query_store.metric.id"],
        ),
        sa.ForeignKeyConstraint(
            ["metric_id"],
            ["query_store.metric.id"],
        ),
        sa.PrimaryKeyConstraint("metric_id", "input_id"),
        schema="query_store",
    )
    op.execute("ALTER TABLE query_store.dimension ENABLE ROW LEVEL SECURITY;")
    op.execute(
        "CREATE POLICY tenant_isolation_query_store_dimension ON query_store.dimension "
        "USING (tenant_id = current_setting('app.current_tenant')::int);"
    )
    op.execute("ALTER TABLE query_store.metric ENABLE ROW LEVEL SECURITY;")
    op.execute(
        "CREATE POLICY tenant_isolation_query_store_metric ON query_store.metric USING"
        " (tenant_id = current_setting('app.current_tenant')::int);"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("metricinput", schema="query_store")
    op.drop_table("metricinfluence", schema="query_store")
    op.drop_table("metricdimension", schema="query_store")
    op.drop_table("metriccomponent", schema="query_store")
    op.drop_index(op.f("ix_query_store_metric_tenant_id"), table_name="metric", schema="query_store")
    op.drop_index(op.f("ix_query_store_metric_metric_id"), table_name="metric", schema="query_store")
    op.drop_table("metric", schema="query_store")
    op.drop_index(op.f("ix_query_store_dimension_tenant_id"), table_name="dimension", schema="query_store")
    op.drop_index(op.f("ix_query_store_dimension_dimension_id"), table_name="dimension", schema="query_store")
    op.drop_table("dimension", schema="query_store")
    # ### end Alembic commands ###
