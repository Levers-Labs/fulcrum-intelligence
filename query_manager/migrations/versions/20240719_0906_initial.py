"""Initial

Revision ID: fd840ad366ba
Revises:
Create Date: 2024-07-19 09:06:17.615727

"""

from collections.abc import Sequence

import sqlalchemy as sa
import sqlmodel
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "fd840ad366ba"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "dimensions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("current_timestamp(0)"), nullable=False),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.text("current_timestamp(0)"), nullable=False),
        sa.Column("dimension_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("label", sa.Text(), nullable=False),
        sa.Column("reference", sa.Text(), nullable=False),
        sa.Column("definition", sa.Text(), nullable=False),
        sa.Column("meta_data", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        schema="query_store",
    )
    op.create_index(
        op.f("ix_query_store_dimensions_dimension_id"),
        "dimensions",
        ["dimension_id"],
        unique=False,
        schema="query_store",
    )
    op.create_table(
        "metric",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("current_timestamp(0)"), nullable=False),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.text("current_timestamp(0)"), nullable=False),
        sa.Column("metric_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("label", sa.Text(), nullable=False),
        sa.Column("abbreviation", sa.Text(), nullable=False),
        sa.Column("definition", sa.Text(), nullable=False),
        sa.Column(
            "unit_of_measure",
            sa.Enum("QUANTITY", "PERCENT", name="unitofmeasure", schema="query_store", inherit_schema=True),
            nullable=True,
        ),
        sa.Column(
            "unit",
            sa.Enum("QUANTITY", "PERCENT", name="unit", schema="query_store", inherit_schema=True),
            nullable=True,
        ),
        sa.Column("components", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("terms", sa.Text(), nullable=False),
        sa.Column(
            "complexity",
            sa.Enum("ATOMIC", "COMPLEX", name="complexity", schema="query_store", inherit_schema=True),
            nullable=True,
        ),
        sa.Column("metric_expression", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("output_of", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("input_to", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("influences", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("influenced_by", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column(
            "periods",
            sa.Enum(
                "DAY", "WEEK", "MONTH", "QUARTER", "YEAR", name="periods", schema="query_store", inherit_schema=True
            ),
            nullable=True,
        ),
        sa.Column(
            "grain_aggregation",
            sa.Enum(
                "DAY",
                "WEEK",
                "MONTH",
                "QUARTER",
                "YEAR",
                name="grain_aggregation",
                schema="query_store",
                inherit_schema=True,
            ),
            nullable=True,
        ),
        sa.Column("aggregations", sa.Text(), nullable=False),
        sa.Column("owned_by_team", sa.Text(), nullable=False),
        sa.Column("dimensions", sa.Text(), nullable=False),
        sa.Column("meta_data", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        schema="query_store",
    )
    op.create_index(
        op.f("ix_query_store_metric_grain_aggregation"),
        "metric",
        ["grain_aggregation"],
        unique=False,
        schema="query_store",
    )
    op.create_index(
        op.f("ix_query_store_metric_metric_id"), "metric", ["metric_id"], unique=False, schema="query_store"
    )
    op.create_index(op.f("ix_query_store_metric_periods"), "metric", ["periods"], unique=False, schema="query_store")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_query_store_metric_periods"), table_name="metric", schema="query_store")
    op.drop_index(op.f("ix_query_store_metric_metric_id"), table_name="metric", schema="query_store")
    op.drop_index(op.f("ix_query_store_metric_grain_aggregation"), table_name="metric", schema="query_store")
    op.drop_table("metric", schema="query_store")
    op.drop_index(op.f("ix_query_store_dimensions_dimension_id"), table_name="dimensions", schema="query_store")
    op.drop_table("dimensions", schema="query_store")
    # ### end Alembic commands ###
