name: Deploy Query Manager to AWS Lambda

on:
  pull_request:
    types: [ closed ]
    branches:
      - main
    paths:
      - 'insights_backend/**'
      - 'commons/**'

#  push:
#    branches:
#      - LEV-389_workflow_CICD_pipeline
#    paths:
#        - 'query_manager/**'
#        - 'commons/**'

  repository_dispatch:
    types: [ manual-dev-deployment-trigger ]
    paths:
      - 'query_manager/**'
      - 'commons/**'

  # In case of a merge to main branch we will deploy all the modules
  # pull_request:
  #   types: [closed]
  #   branches:
  #     - main
env:
  ecr_repo: "query-manager"
  app_name: "query_manager"
  app_lambda_function_name: "query-manager-dev"

permissions:
  id-token: write
  contents: read

jobs:
  set-vars:
    name: set-vars
    runs-on: ubuntu-latest

    outputs:
      ecr_repo: ${{ steps.set-vars.outputs.ecr_repo }}
      app_name: ${{ steps.set-vars.outputs.app_name }}
      app_lambda_function_name: ${{ steps.set-vars.outputs.app_lambda_function_name }}

    steps:
      - name: set-vars
        id: set-vars
        run: |
          echo "ecr_repo=$ecr_repo" >> $GITHUB_OUTPUT
          echo "app_name=$app_name" >> $GITHUB_OUTPUT
          echo "app_lambda_function_name=$app_lambda_function_name" >> $GITHUB_OUTPUT

  generate-tag:
    name: generate-tag
    runs-on: ubuntu-latest
    outputs:
      tag_id: ${{ steps.generate-tag.outputs.tag_id }}
    steps:
      - name: Generate TAG
        id: generate-tag
        run: |
          echo "tag_id=$(date +%Y%m%d_%H%M%S)" >> $GITHUB_OUTPUT

  build-image:
    needs: [generate-tag, set-vars]
    uses: ./.github/workflows/reusable-build-image.yml
    with:
        ecr_repo: ${{ needs.set-vars.outputs.ecr_repo }}
        app_name: ${{ needs.set-vars.outputs.app_name }}
        tag: ${{ needs.generate-tag.outputs.tag_id }}

    secrets:
      ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      DEV_DEPLOYMENT_ROLE: ${{ secrets.DEV_DEPLOYMENT_ROLE }}

  deploy-image-on-lambda:
    needs: [build-image, generate-tag, set-vars]
    uses: ./.github/workflows/reusable-lambda-deployment.yml
    with:
      ecr_repo: ${{ needs.set-vars.outputs.ecr_repo }}
      app_lambda_function_name: ${{ needs.set-vars.outputs.app_lambda_function_name }}
      tag: ${{ needs.generate-tag.outputs.tag_id }}
    secrets:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      DEV_DEPLOYMENT_ROLE: ${{ secrets.DEV_DEPLOYMENT_ROLE }}
      ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
