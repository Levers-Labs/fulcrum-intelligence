name: Deploy Leverlabs Apps images

on:
  workflow_call:
    inputs:
      ecr_repo:
        description: 'application ecr repo name'
        required: true
        type: string
      app_lambda_function_name:
        description: "One of the App's lambda function name"
        required: true
        type: string
      tag:
        description: 'Dynamically generated tag, format curdate_curtime'
        required: true
        type: string
      health_endpoint:
        description: 'endpoint to check the health of the server'
        required: true
        type: string

    secrets:
      AWS_REGION:
        description: 'The region of ECR'
        required: true
      DEV_DEPLOYMENT_ROLE:
        description: 'The deployment role ARN (OIDC)'
        required: true
      ECR_REGISTRY:
        description: 'The ECR registry URL'
        required: true

# Required to get the ID Token that will be used for OIDC
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout



jobs:
  deploy-app:
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.DEV_DEPLOYMENT_ROLE }}
          role-session-name: OIDCSession

      - name: Update AWS Lambda function
        run: |
          IMAGE_URI="${{ secrets.ECR_REGISTRY }}/${{ inputs.ecr_repo }}:${{ inputs.tag }}"
          aws lambda update-function-code \
            --region ${{ secrets.AWS_REGION }} \
            --function-name ${{ inputs.app_lambda_function_name }} \
            --image-uri $IMAGE_URI

      - name: Publish New Version of Lambda Function
        run: |
            aws lambda wait function-updated --function-name ${{ inputs.app_lambda_function_name }}
            aws lambda publish-version --function-name ${{ inputs.app_lambda_function_name }}

      - name: Test /health endpoint
        id: test
        run: |
          # Test the /health endpoint
          curl --fail ${{ inputs.health_endpoint }} || exit 1

      - name: Rollback if needed
#        if: failure()  # Run this step only if previous steps failed
        run: |
          # Rollback to the previous Lambda version using alias
          PREV_VERSION=$(aws lambda list-versions-by-function
                        --region ${{ secrets.AWS_REGION }} \
                        --function-name ${{ inputs.app_lambda_function_name }} \
                        --query 'Versions[-2].Version' --output text)
          aws lambda update-alias \
          --region ${{ secrets.AWS_REGION }} \
          --function-name ${{ inputs.app_lambda_function_name }} \
          --name live --function-version $PREV_VERSION
